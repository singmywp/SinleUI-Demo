<template>
	<sn-page>
		<sn-topbar title="Scan 扫码"
		:features="[{id:'run',icon:'play-circle-fill'} as SnDataItem]"
		@button-click="buttonClicked"></sn-topbar>
		<sn-alert type="primary"
		:text="'\u3000注意，本插件分为两部分：\n\u3000• sn-scan-provider\n\u3000\u3000这是组件的核心部分，负责摄像头预览、扫码解析等基础工作，并向外部提供接口。\n\u3000• sn-scan\n\u3000\u3000这是组件的界面部分，主要负责在界面中处理用户操作并调用相应的API。应当将该组件放置在独立的页面中，template 下只放这一个组件，并设置其flex: 1。如果您有自定义界面的需求，可参考此组件源码实现，重写UI。'"></sn-alert>
		<sn-alert type="error"
		:text="'\u3000\u3000本插件核心 sn-scan-provider 属于扩展组件，需要您另外在插件市场下载。\n\u3000\u3000sn-scan 则属于 SinleUI 基础组件的一部分，无需您额外下载。'"></sn-alert>
		<com-card title="组件演示">
			<sn-text class="introduction" :text="'\u3000\u3000一款基于 Google MLKit 的 UTS扫码插件。'"></sn-text>
			<sn-form v-model="configs"
			:showBorder="false">
				<sn-form-item label="扫码类型">
					<sn-select v-model="(configs['scanType'] as number)"
					width="150px"
					:data="scanTypes"></sn-select>
				</sn-form-item>
				<sn-form-item label="自定义提示声">
					<sn-select v-model="(configs['dingFileSrc'] as number)"
					width="150px"
					:data="dingFiles"></sn-select>
				</sn-form-item>
				<sn-form-item label="只扫一次">
					<sn-switch v-model="(configs['scanOnlyOnce'] as boolean)"></sn-switch>
				</sn-form-item>
				<sn-form-item label="连续扫描">
					<sn-switch v-model="(configs['continuous'] as boolean)"
					:disabled="(configs['scanOnlyOnce'] as boolean)"></sn-switch>
				</sn-form-item>
				<sn-form-item label="显示动画">
					<sn-switch v-model="(configs['showAni'] as boolean)"></sn-switch>
				</sn-form-item>
				<sn-form-item label="显示手电筒">
					<sn-switch v-model="(configs['showTorch'] as boolean)"></sn-switch>
				</sn-form-item>
				<sn-form-item label="显示相册选择">
					<sn-switch v-model="(configs['showAlbum'] as boolean)"></sn-switch>
				</sn-form-item>
				<sn-form-item label="显示返回按钮">
					<sn-switch v-model="(configs['showBackButton'] as boolean)"></sn-switch>
				</sn-form-item>
				<sn-form-item label="启用手势缩放">
					<sn-switch v-model="(configs['enableZoom'] as boolean)"></sn-switch>
				</sn-form-item>
				<sn-form-item label="启用成功提示声">
					<sn-switch v-model="(configs['enableDing'] as boolean)"></sn-switch>
				</sn-form-item>
				<sn-form-item label="界面标题">
					<sn-input v-model="(configs['title'] as string)"></sn-input>
				</sn-form-item>
				<sn-form-item label="初始焦距">
					<sn-stepper v-model="(configs['initZoomScale'] as number)"
					:min="0"
					:max="1"
					:step="0.1
					"></sn-stepper>
				</sn-form-item>
				<sn-form-item label="连续扫描间隔(ms)">
					<sn-stepper v-model="(configs['continuousSleep'] as number)"
					:min="100"
					:step="100"></sn-stepper>
				</sn-form-item>
			</sn-form>
			<sn-button class="m-t-10"
			text="扫码" 
			level="second" 
			type="primary"
			@click="scan()"></sn-button>
		</com-card>
	</sn-page>
</template>

<script setup>
	// #ifdef WEB
	// @ts-nocheck
	// #endif
	import { $snui, SnScanParams, SnDataItem } from '@/uni_modules/sinle-ui'
	
	const configs = reactive({
		enableDing: true,
		showTorch: true,
		showAlbum: true,
		showBackButton: true,
		showAni: true,
		enableZoom: true,
		title: '扫一扫',
		initZoomScale: 0,
		continuousSleep: 100,
		scanOnlyOnce: false,
		continuous: false,
		scanType: 0,
		dingFileSrc: 0
	} as UTSJSONObject)
	const scanTypes = [
		{ id: 'all', text: '全部' },
	    { id: 'barcode', text: '仅条码' },
	    { id: 'qrcode', text: '仅二维码' }
	] as SnDataItem[]
	const dingFiles = [
	    { id: 'default', text: '默认' },
	    { id: 'scannedSuccessF', text: '女声:扫码成功' },
	    { id: 'scannedSuccessM', text: '男声:扫码成功' },
	    { id: 'jump', text: '(轻快)嘟' },
	    { id: 'processing', text: '(长)biubiubiu~' }
	] as SnDataItem[]
	
	watch(configs, (v : UTSJSONObject) => {
		if (v['scanOnlyOnce'] == true) {
			configs['continuous'] = false
		}
	})
	
	function scan() {
		let sys = uni.getSystemInfoSync()
		if (sys.uniPlatform != 'app' || sys.osName != 'android') {
			$snui.utils.showSysToast({
				title: '扫码组件暂时只支持 Android 平台'
			})
			return
		}
		let data = {
			enableDing: configs['enableDing'] as boolean,
			dingFileSrc: configs['dingFileSrc'] != 0 ? `static/media/${dingFiles[configs['dingFileSrc'] as number]['id']}.mp3`: '',
			scanType: scanTypes[configs['scanType'] as number]['id'] as string,
			scanOnlyOnce: configs['scanOnlyOnce'] as boolean,
			continuous: configs['continuous'] as boolean,
			title: configs['title'] as string,
			showTorch: configs['showTorch'] as boolean,
			showAlbum: configs['showAlbum'] as boolean,
			showBackButton: configs['showBackButton'] as boolean,
			showAni: configs['showAni'] as boolean,
			enableZoom: configs['enableZoom'] as boolean,
			initZoomScale: configs['initZoomScale'] as number,
			continuousSleep: configs['continuousSleep'] as number
		} as SnScanParams
		$snui.store.set('demo-scan-params',data)
		uni.navigateTo({
			url: `/pages/components/sn-scan__view`
		})
	}
	
	function buttonClicked(e: SnDataItem){
		if (e.id == 'run') scan()
	}
</script>

<style lang="scss">
</style>