<template>
	<sn-page>
		<sn-topbar title="Timer 计时器"></sn-topbar>
		<com-card title="基础用法"
		note="顾名思义，就是一个计时器。\n推荐使用插槽布局为主，样式更好调。">
			<sn-timer></sn-timer>
		</com-card>
		<com-card title="自定义样式"
		note="可以自由设置文本的颜色和大小等样式">
			<sn-timer textSize="$3"
			textColor="$successDark"
			:customStyle="{fontFamily:'alipuhuiheavy'}"></sn-timer>
		</com-card>
		<com-card title="格式化"
		note="计时器内置文字支持时间格式化（参照Day.js）。">
			<sn-timer format="DD 天 HH 小时 mm 分钟 ss 秒"></sn-timer>
		</com-card>
		<com-card title="毫秒精度"
		note="虽然使用一般模式也支持获取毫秒，但误差极大，不如此模式精确。">
			<sn-timer format="mm:ss.SS"
			millisecond></sn-timer>
		</com-card>
		<com-card title="插槽"
		note="推荐使用插槽模式，自由度更高。">
			<sn-timer millisecond
			@change="onChange">
			<sn-row>
				<sn-tag class="spacing" type="primary" :text="`${timedata.h}`"></sn-tag>
				<sn-text class="spacing" text="时" font="alipuhuiheavy"></sn-text>
				<sn-tag class="spacing" type="primary" :text="`${timedata.m}`"></sn-tag>
				<sn-text class="spacing" text="分" font="alipuhuiheavy"></sn-text>
				<sn-tag class="spacing" type="primary" :text="`${timedata.s}`"></sn-tag>
				<sn-text class="spacing" text="秒" font="alipuhuiheavy"></sn-text>
			</sn-row>
			</sn-timer>
		</com-card>
		<com-card title="自由控制"
		note="提供 API 以自由控制计时器的状态。">
			<view class="align-items-center">
				<sn-timer ref="timerEle"
				format="mm:ss.SS"
				millisecond
				:autoplay="false"></sn-timer>
				<sn-row class="m-t-10"
				align="center">
					<sn-button @click="reset">
						<sn-icon name="refresh-line"></sn-icon>
					</sn-button>
					<sn-button class="m-l-10"
					type="primary"
					level="second"
					@click="playOrPause">
						<sn-icon color="$primary"
						:name="`${running?'pause':'play'}-fill`" ></sn-icon>
					</sn-button>
				</sn-row>
			</view>
		</com-card>
	</sn-page>
</template>

<script setup>
	import { $snui, SnTime } from '@/uni_modules/sinle-ui'
	const colors = $snui.colors
	const running = ref(false)
	const timedata = ref({d:0,h:0,m:0,s:0,ms:0} as SnTime)
	const timerEle = ref(null as SnTimerComponentPublicInstance | null)
	
	function onChange(data: SnTime){
		timedata.value = data
	}
	
	function playOrPause(){
		running.value = !running.value
		if (running.value) {
			timerEle.value!.start()
		} else {
			timerEle.value!.pause()
		}
	}
	
	function reset(){
		running.value = false
		timerEle.value!.reset()
	}
</script>

<style lang="scss">
	.spacing {
		margin-right: 5px;
	}
</style>
