<template>
	<sn-page>
		<sn-topbar title="Form 表单"></sn-topbar>
		<com-card title="基础用法"
		note="用于数据收集及验证。内置的数据验证器提供了丰富的场景支持，使得数据校验变得异常容易。同时支持自定义数据校验，满足您的各种需求。">
			<sn-form ref="formEle"
			v-model="formData"
			:type="formTypes[formType]['id'] ?? 'embed'"
			:showError="showError"
			:showBorder="showBorder"
			:triggerChange="triggerChange">
				<sn-form-item label="姓名" 
				field="name" 
				required
				:rule="nameRule">
					<sn-input v-model="(formData['name'] as string)"
					align="right"
					:showBorder="formType==0?true:false"
					:bgColor="formType==0?'':colors.transparent"
					:activeBgColor="formType==0?'':colors.transparent">
					</sn-input>
				</sn-form-item>
				<sn-form-item label="性别"
				field="gender" 
				required
				:rule="genderRule">
					<sn-radio-group v-model="(formData['gender'] as number)">
						<sn-radio class="no-margin-bottom" 
						text="男"></sn-radio>
						<sn-radio class="no-margin-bottom" 
						text="女"></sn-radio>
					</sn-radio-group>
				</sn-form-item>
				<sn-form-item label="年龄" 
				field="age" 
				required
				:rule="ageRule">
					<sn-stepper v-model="(formData['age'] as number)"></sn-stepper>
				</sn-form-item>
				<sn-form-item label="是否党员" 
				field="inParty" 
				required
				:rule="inPartyRule">
					<sn-switch v-model="(formData['inParty'] as boolean)"></sn-switch>
				</sn-form-item>
				<sn-form-item label="手机号码"
				field="phone" 
				required
				:rule="phoneRule">
					<sn-input v-model="(formData['phone'] as string)"
					align="right"
					:showBorder="formType==0?true:false"
					:bgColor="formType==0?'':colors.transparent"
					:activeBgColor="formType==0?'':colors.transparent">
					</sn-input>
				</sn-form-item>
				<sn-form-item label="自我评价"
				field="value" 
				required
				:rule="valueRule">
					<sn-rate v-model="(formData['value'] as number)"
					clearable>
					</sn-rate>
				</sn-form-item>
				<sn-form-item label="身份证号码"
				field="idcard" 
				required
				:rule="idcardRule">
					<sn-input v-model="(formData['idcard'] as string)"
					placeholder="不收集隐私信息，可看源码"
					:showBorder="formType==0?true:false"
					:bgColor="formType==0?'':colors.transparent"
					:activeBgColor="formType==0?'':colors.transparent">
					</sn-input>
				</sn-form-item>
				<sn-form-item label="家庭住址"
				field="address">
					<sn-textarea v-model="(formData['address'] as string)"
					autoHeight
					:showBorder="formType==0?true:false"
					:bgColor="formType==0?'':colors.transparent"
					:activeBgColor="formType==0?'':colors.transparent">
					</sn-textarea>
				</sn-form-item>
				<sn-gap height="20px"></sn-gap>
				<sn-button type="primary"
				text="提交"
				@click="submit"></sn-button>
			</sn-form>
		</com-card>
		<com-card title="使用配置">
			<sn-form :showBorder="false">
				<sn-form-item label="风格">
					<sn-select v-model="formType"
					:data="formTypes"></sn-select>
				</sn-form-item>
				<sn-form-item label="边框(仅嵌入式)">
					<sn-switch v-model="showBorder"></sn-switch>
				</sn-form-item>
				<sn-form-item label="显示错误提示">
					<sn-switch v-model="showError"
					@change="changeErrorTip"></sn-switch>
				</sn-form-item>
				<sn-form-item label="数据变化自动校验">
					<sn-switch v-model="triggerChange"></sn-switch>
				</sn-form-item>
			</sn-form>
		</com-card>
		<sn-gap height="200px"></sn-gap>
	</sn-page>
</template>

<script setup>
	import { $snui, SnFormValidResult, SnFormItemRule, SnDataItem } from '@/uni_modules/sinle-ui'
	const colors = $snui.colors
	
	const formEle = ref(null as SnFormComponentPublicInstance | null)
	
	const formType = ref(0)
	const showBorder = ref(false)
	const showError = ref(true)
	const triggerChange = ref(false)
	
	const formTypes = [
		{
			text: '嵌入式',
			id: 'embed',
		},
		{
			text: '浮动式',
			id: 'float'
		}] as SnDataItem[]
	
	const formData = ref({
		name: '',
		age: 0,
		inParty: true,
		phone: '',
		gender: 0,
		value: 0,
		address: '',
		idcard: ''
	})
	
	const nameRule = ref({
		type: 'chinese',
		required: true,
		message: '请填写正确的中文姓名',
		valid: (value: any):string=>{
			if ((value as string).length > 5){
				return '姓名过长'
			}
			return ''
		}
	} as SnFormItemRule)
	
	const ageRule = ref({
		type: 'integer',
		required: true,
		message: '请填写正确的年龄',
		valid: (value: any):string=>{
			if ((value as number)<18 && formData.value['inParty'] as boolean) {
				return '党员必须年满18周岁'
			}
			return ''
		}
	} as SnFormItemRule)
	
	const inPartyRule = ref({
		type: 'boolean',
		required: true
	} as SnFormItemRule)
	
	const phoneRule = ref({
		type: 'phone',
		required: true,
		message: '请输入正确的手机号码'
	} as SnFormItemRule)
	
	const genderRule = ref({
		type: 'enum',
		enum: [0, 1],
		required: true,
		message: '请选择性别'
	} as SnFormItemRule)
	
	const valueRule = ref({
		type: 'integer',
		min: 1,
		max: 5,
		required: true,
		valid: (value: any):string=>{
			let v = value as number
			
			if (v == 0) {
				return '请进行自我评价'
			} else if (v <= 2) {
				return `不要妄自菲薄哦，相信自己(●'◡'●)`
			}
			return ''
		}
	} as SnFormItemRule)
	
	const idcardRule = ref({
		type: 'idcard',
		message: '请输入正确的第二代公民身份证号码'
	} as SnFormItemRule)
	
	function changeErrorTip() {
		if (!showError.value){
			uni.showModal({
				title: '提示',
				content: '关闭后可通过回调函数获取校验结果，自定义错误提示'
			})
		}
	}
	
	function submit(){
		formEle.value?.$callMethod('submit', {
			success: ()=>{
				uni.showModal({
					title: '提示',
					content: '提交成功（实际未上传云端。本 Demo 不会收集或传送您的任何隐私信息，可查看源码）'
				})
			}
		} as SnFormValidResult)
	}
</script>

<style lang="scss">
	.no-margin-bottom {
		margin-bottom: 0;
	}
</style>
